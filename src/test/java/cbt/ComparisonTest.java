/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cbt;

import cbt.dsl.DslTestCase;
import org.junit.*;

import java.util.HashMap;
import java.util.Map;

import static org.junit.Assert.*;

public class ComparisonTest extends DslTestCase {
    static String baseUrl1 = "https://demo.applitools.com/gridHackathonV1.html";
    static String baseUrl2 = "https://demo.applitools.com/gridHackathonV2.html";

    @Test
    public void totalElements() {
        getBrowser().navitgateTo(baseUrl1);
        int firstCount = getBrowser().scrape();
        getBrowser().navitgateTo(baseUrl2);
        int secondCount = getBrowser().scrape();
        System.out.println(firstCount + "\t" + secondCount);
        assertEquals(firstCount, secondCount);
    }

    @Test
    public void totalProducts() {
        getBrowser().navitgateTo(baseUrl1);
        int firstCount = getBrowser().products();

        getBrowser().navitgateTo(baseUrl2);
        int secondCount = getBrowser().products();
        System.out.println(firstCount + "\t" + secondCount);
        assertEquals(firstCount, secondCount);
    }

    @Test
    public void totalItemsInCart() {
        getBrowser().navitgateTo(baseUrl1);
        String firstCount = getBrowser().getItemsInCart();

        getBrowser().navitgateTo(baseUrl2);
        String secondCount = getBrowser().getItemsInCart();
        System.out.println(firstCount + "\t" + secondCount);
        assertEquals(firstCount, secondCount);
    }

    @Test
    public void accountName() {
        getBrowser().navitgateTo(baseUrl1);
        String first = getBrowser().getAccountName();

        getBrowser().navitgateTo(baseUrl2);
        String second = getBrowser().getAccountName();
        System.out.println(first + "\t" + second);
        assertEquals(first, second);
    }

    @Test
    public void searchTest() {
        getBrowser().navitgateTo(baseUrl1);
        int first = getBrowser().search("light");

        getBrowser().navitgateTo(baseUrl2);

        int second = getBrowser().search("light");

        System.out.println(first + "\t" + second);
        assertEquals(first, second);
    }

    @Test
    public void filterTest() {
        getBrowser().navitgateTo(baseUrl1);
        Map<String, Integer> counts1 = checkAllFilters();

        getBrowser().navitgateTo(baseUrl2);
        Map<String, Integer> counts2 = checkAllFilters();

        for (String key : counts1.keySet()) {
            if (counts1.get(key) != counts2.get(key)) {
                System.out.println("Filter results for " + key + " v1:" + counts1.get(key) + " v2:" + counts2.get(key));
            }
        }
    }

    private Map<String, Integer> checkAllFilters() {
        Map<String, String> filters = getBrowser().getAllFiltersMap();
        Map<String, Integer> retVal = new HashMap<>();
        for (String key : filters.keySet()) {
            retVal.put(key, getBrowser().filterOn(filters.get(key), key));
        }

        return retVal;
    }

    @AfterClass
    public static void tearDown() {
        getBrowser().close();
    }
}
